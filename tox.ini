[tox]
envlist = clean,py{27,34,35},astropy10,report
skipsdist = true
toxworkdir = {homedir}/.tox/mpdaf

[testenv]
basepython =
    clean: python2.7
    report: python2.7
    py27: python2.7
    py34: python3.4
    py35: python3.5
    astropy10: python2.7
whitelist_externals =
    which
    py.test
setenv =
    COVERAGE_FILE={homedir}/.tox/.coverage.{env:CI_BUILD_REF_NAME:default}
commands =
    python --version
    which python
    which py.test
    pip freeze -l
    py.test {posargs} --cov mpdaf --cov-report term tests lib/mpdaf
usedevelop = true
sitepackages = true
deps =
    scipy
    matplotlib
    numexpr
    coverage
    fitsio
    pytest
    pytest-cov
    setuptools>=18
    py{27,34,35}: astropy>=1.1
    py{27,34,35}: numpy>=1.11
    astropy10: astropy>=1.0,<1.1
    astropy10: numpy==1.10.4

[testenv:muselet]
basepython = python2.7
setenv =
    COVERAGE_FILE={homedir}/.tox/.coverage.{env:CI_BUILD_REF_NAME:default}
commands =
    pip freeze -l
    py.test {posargs} --cov mpdaf --cov-report term tests/sdetect/test_muselet.py
sitepackages = true
deps =
    scipy
    matplotlib
    coverage
    pytest
    pytest-cov
    setuptools>=18
    astropy>=1.1
    numpy>=1.11

[testenv:clean]
deps = coverage
usedevelop = false
skip_install = true
sitepackages = false
commands = coverage erase

[testenv:report]
deps = coverage
usedevelop = false
skip_install = true
sitepackages = false
commands =
    coverage combine {homedir}/.tox/.coverage.{env:CI_BUILD_REF_NAME:default}
    coverage report
    coverage html -i

[testenv:check]
basepython = python2.7
usedevelop = false
deps =
    numpy
    docutils
    check-manifest
    flake8
    collective.checkdocs
    pygments
commands =
    # python setup.py checkdocs
    python setup.py check --strict --metadata
    check-manifest {toxinidir}

[testenv:docs]
basepython = python2.7
changedir = doc
usedevelop = false
deps =
    numpy
    scipy
    matplotlib
    astropy
    sphinx
    sphinx_rtd_theme
    numpydoc
commands = sphinx-build {posargs} -b html -d build/doctrees . build/html

[testenv:dash]
basepython = python2.7
changedir = doc
usedevelop = false
deps =
    doc2dash
passenv = SSH_AUTH_SOCK
whitelist_externals =
    tar
    rsync
commands =
    doc2dash -f -n MPDAF -d build build/html
    tar --exclude='.DS_Store' -czf build/MPDAF.docset.tgz build/MPDAF.docset
    rsync -rlDvhc build/MPDAF.docset.tgz urania1:{posargs:public_html/mpdaf/}

[testenv:sync_doc]
basepython = python2.7
skip_install = true
usedevelop = false
deps =
passenv = SSH_AUTH_SOCK
whitelist_externals = rsync
commands =
    rsync -rlDvhc doc/build/html/ urania1:{posargs:/srv/mpdaf/DocCoreLib_dev}

[testenv:sync_cov]
basepython = python2.7
skip_install = true
usedevelop = false
deps =
passenv = SSH_AUTH_SOCK
whitelist_externals = rsync
commands =
    rsync -rltDvhc htmlcov/ urania1:{posargs:public_html/mpdaf/cov}
