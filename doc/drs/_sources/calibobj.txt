

Interface for intermediate MUSE DRS objects
*******************************************

Intermediate MUSE DRS objects refer to all FITS calibration files (MASTER_BIAS MASTER_DARK MASTER_FLAT OBJECT_RESAMPLED ...).
There are 2D images with three extensions: the data value, the data variance and the data quality. These files describes properties in each ifu.
That's why two classes manage them:

  - The first class CalibFile manages a given file,
  - the second class CalibDir manages a set a files corresponding of several MUSE ifus.


CalibFile class
===============
  
.. class:: drs.CalibFile([filename=None])

  This class manages calibration files. The FITS file is opened with memory mapping. Just the primary header and array dimensions are loaded.
  Methods get_data, get_dq and get_stat must be used to get array extensions.
  
  :param filename: the FITS filename. None creates an empty object.
  :type filename: string or None
  

Attributes
----------------

+----------------+-----------------+--------------------------------------------------------------------------------------+
| filename       | string          | The FITS file name. None if any.                                                     |
+----------------+-----------------+--------------------------------------------------------------------------------------+
| primary_header | pyfits.CardList | The primary header                                                                   |
+----------------+-----------------+--------------------------------------------------------------------------------------+
| data           | string          | name of memory-mapped files used for accessing pixel values                          |
+----------------+-----------------+--------------------------------------------------------------------------------------+
| dq             | string          | name of memory-mapped files used for accessing bad pixel status as defined by Euro3D |
+----------------+-----------------+--------------------------------------------------------------------------------------+
| stat           | string          | name of memory-mapped files used for accessing variance                              |
+----------------+-----------------+--------------------------------------------------------------------------------------+
| nx             | integer         | Dimension of the data/dq/stat arrays along the x-axis                                |
+----------------+-----------------+--------------------------------------------------------------------------------------+
| ny             | integer         | Dimension of the data/dq/stat arrays along the y-axis                                |
+----------------+-----------------+--------------------------------------------------------------------------------------+


Methods
----------------

.. currentmodule:: drs.CalibFile
   
.. function:: copy()

  Copies CalibFile object in a new one and returns it.
  
  :rtype: CalibFile object
 

.. function:: info()

  Prints information
    
    
.. function:: get_data()

  Opens the FITS file with memory mapping, loads the data array and returns it.
  
  :rtype: memory-map to an array
    
    
.. function:: get_dq()

  Opens the FITS file with memory mapping, loads the dq array and returns it.
  
  :rtype: memory-map to an array

        
.. function:: get_stat()

  Opens the FITS file with memory mapping, loads the stat array and returns it.
  
  :rtype: memory-map to an array


.. function:: write(filename)

  Saves the object in a FITS file.
  
  :param filename: the FITS filename
  :type filename: string
  
.. function:: _add(x)

  Operator +.
  
  :param x:
  :type x: number or CalibFile object
  :rtype: CalibFile object
  
.. function:: _sub(x)

  Operator -.
  
  :param x:
  :type x: number or CalibFile object
  :rtype: CalibFile object
  
.. function:: _mul(x)

  Operator \*.
  
  :param x:
  :type x: number or CalibFile object
  :rtype: CalibFile object
  
.. function:: _div(x)

  Operator /.
  
  :param x:
  :type x: number or CalibFile object
  :rtype: CalibFile object
        

CalibDir class
==============

.. class:: drs.CalibDir(type[, dirname=None])

  This class manages repository containing 24 calibration files (one per ifu).
  
  :param type: Type of calibration files that appears in filenames <type>_<ifu id>.fits.
  :type type: string
  :param dirname: The repository name. None if any.This repository must contain files labeled <type>_<ifu id>.fits.
  :type dirname: string
  

Attributes
----------------

+----------+---------+---------------------------------------------------------------------------+
| dirname  | string  | The repository name. None if any.                                         |
|          |         | This repository must contain files labeled <type>_<ifu id>.fits.          |
+----------+---------+---------------------------------------------------------------------------+
| type     | string  | Type of calibration files that appears in filenames <type>_<ifu id>.fits. |
+----------+---------+---------------------------------------------------------------------------+
| files    | dict    | List of files (ifu id,CalibFile).                                         |
+----------+---------+---------------------------------------------------------------------------+
| progress | boolean |If True, progress of multiprocessing tasks are displayed. True by default. |
+----------+---------+---------------------------------------------------------------------------+

Indexing
----------------

MyCalibDir[id] returns the CalibFile object corresponding to the ifu id.

MyCalibDir[id] = MyCalibFile sets the corresponding CalibFile.


Methods
----------------

.. currentmodule:: drs.CalibDir

.. function:: copy()

  Copies CalibDir object in a new one and returns it.
  
  :rtype: CalibDir object
 

.. function:: info()

  Prints information.
  
.. function:: _add(x)

  Operator + on each CalibFile (multiprocessing is used).
  
  :param x:
  :type x: number or CalibDir object
  :rtype: CalibDir object
  
.. function:: _sub(x)

  Operator - on each CalibFile (multiprocessing is used).
  
  :param x:
  :type x: number or CalibDir object
  :rtype: CalibDir object
  
.. function:: _mul(x)

  Operator * on each CalibFile (multiprocessing is used).
  
  :param x:
  :type x: number or CalibDir object
  :rtype: CalibDir object
  
.. function:: _div(x)

  Operator / on each CalibFile (multiprocessing is used).
  
  :param x:
  :type x: number or CalibDir object
  :rtype: CalibDir object
  
.. function:: write(dirname):
   
  Writes files in dirname.
  
  :param dirname: The repository name.
  :type dirname: string
